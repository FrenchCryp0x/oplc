name: smoke

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "18 */6 * * *"  # every 6 hours

env:
  API: https://r3ddkahili-oplc-api.hf.space
  UI:  https://r3ddkahili-oplc-ui.hf.space

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Show targets
        run: |
          echo "API=$API"
          echo "UI=$UI"

      - name: Resolve + warmup
        run: |
          nslookup "$(echo $API | sed 's#https\?://##')" || true
          curl -sSI "$API/healthz" || true

      - name: Healthz (with retries)
        run: |
          for i in {1..5}; do
            if curl -fsS --max-time 10 "$API/healthz" | grep -xq 'ok'; then
              echo "healthz ok"
              exit 0
            fi
            echo "retry $i..." && sleep 5
          done
          echo "::error::/healthz failed after retries" && exit 1

      - name: Range check for known prefix (password)
        run: |
          # Expect to find the known suffix for SHA-1('password')
          curl -fsS --retry 3 --retry-all-errors "$API/range/5BAA6" \
            | grep -q '1E4C9B93F3F0682250B6CF8331B7EE68FD8'

      - name: Verify local SHA-1 (sanity)
        run: |
          python - <<'PY'
          import hashlib
          h = hashlib.sha1(b'password').hexdigest().upper()
          assert h == '5BAA61E4C9B93F3F0682250B6CF8331B7EE68FD8'
          print('ok')
          PY

      - name: UI reachable (homepage contains title)
        run: |
          curl -fsS --retry 3 --retry-all-errors "$UI/" \
            | grep -q 'Open Password Leak Check' \
            || (echo "::error::UI home did not contain expected title" && exit 1)

      - name: Print versions (diagnostic)
        run: |
          curl --version
          python --version
